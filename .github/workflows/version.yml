name: increment_version
on:
  push:
    branches:
      - main

jobs:
  update-version:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout source repository
        uses: actions/checkout@v4
        
      - name: Checkout target repository
        uses: actions/checkout@v4
        with:
          repository: airdata/docker-jenkins-stack  # Replace with target repository
          token: ${{ secrets.PAT_TOKEN }}
          path: docker-jenkins-stack
      
      - name: Update version number
        run: |
          python -c '
          import os
          import re

          file_path = "docker-jenkins-stack/jenkins-master/Dockerfile"
          
          def increment_version(version):
              # Split version into parts
              parts = version.split(".")
              
              # Convert last part to integer and increment
              if len(parts) > 0:
                  parts[-1] = str(int(parts[-1]) + 1)
              
              # Join back together
              return ".".join(parts)
          
          # Read the Dockerfile
          with open(file_path, "r") as file:
              content = file.read()
          
          # Find current version using regex
          match = re.search(r"FROM airdata/jenkins-master-docker:(\d+\.?\d*\.?\d*)", content)
          if match:
              current_version = match.group(1)
              new_version = increment_version(current_version)
              
              # Update the file
              new_content = content.replace(
                  f"FROM airdata/jenkins-master-docker:{current_version}",
                  f"FROM airdata/jenkins-master-docker:{new_version}"
              )
              
              # Write back to file
              with open(file_path, "w") as file:
                  file.write(new_content)
                  
          
          else:
              print("Error: Could not find version in Dockerfile")
              exit(1)
          '

          
      - name: Check for changes
        id: check_changes
        working-directory: docker-jenkins-stack
        run: |
          git diff --exit-code || echo "changes=true" >> $GITHUB_OUTPUT
          
      - name: Create Pull Request
        if: steps.check_changes.outputs.changes == 'true'
        uses: peter-evans/create-pull-request@v5
        with:
          token: ${{ secrets.PAT_TOKEN }}
          path: docker-jenkins-stack
          commit-message: "Update version to ${{ github.event.inputs.new_version }}"
          title: "Version Update: ${{ github.event.inputs.new_version }}"
          body: |
            Automated version update:
            - Updated version from jenkins-master-docker:*.*.* to jenkins-master-docker:${{ github.event.inputs.new_version }}
            
            This PR was automatically generated by GitHub Actions.
          branch: version-update
          base: master  # Change this to your default branch if different
          delete-branch: true
